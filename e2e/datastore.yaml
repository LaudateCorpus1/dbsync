pipeline:
  create-db:
    db1:
      action: dsunit:init
      datastore: db1
      recreate: true
      config:
        driverName: mysql
        descriptor: '[username]:[password]@tcp(${dbIP.mysql}:3306)/[dbname]?parseTime=true'
        credentials: $mysqlCredentials
      admin:
        datastore: mysql
        ping: true
        config:
          driverName: mysql
          descriptor: '[username]:[password]@tcp(${dbIP.mysql}:3306)/[dbname]?parseTime=true'
          credentials: $mysqlCredentials
      scripts:
        - URL: datastore/db1/schema.sql

    db2:
      action: dsunit:init
      datastore: db2
      recreate: true
      config:
        driverName: mysql
        descriptor: '[username]:[password]@tcp(${dbIP.mysql}:3306)/[dbname]?parseTime=true'
        credentials: $mysqlCredentials
      admin:
        datastore: mysql
        ping: true
        config:
          driverName: mysql
          descriptor: '[username]:[password]@tcp(${dbIP.mysql}:3306)/[dbname]?parseTime=true'
          credentials: $mysqlCredentials
      scripts:
        - URL: datastore/db2/schema.sql

    db3:
      action: dsunit:init
      datastore: db3
      recreate: true
      config:
        driverName: mysql
        descriptor: '[username]:[password]@tcp(${dbIP.mysql}:3306)/[dbname]?parseTime=true'
        credentials: $mysqlCredentials
      admin:
        datastore: mysql
        ping: true
        config:
          driverName: mysql
          descriptor: '[username]:[password]@tcp(${dbIP.mysql}:3306)/[dbname]?parseTime=true'
          credentials: $mysqlCredentials
      scripts:
        - URL: datastore/db3/schema.sql

    pgdb:
      action: dsunit:init
      datastore: pgdb
      config:
        driverName: postgres
        descriptor: host=${dbIP.pg} port=5432 user=[username] password=[password] dbname=[dbname] sslmode=disable
        credentials: $pgCredentials
      admin:
        datastore: postgres
        config:
          driverName: postgres
          descriptor: host=${dbIP.pg} port=5432 user=[username] password=[password] dbname=[dbname] sslmode=disable
          credentials: $pgCredentials
          ping: true
      recreate: true
      scripts:
        - URL: datastore/pgdb/schema.sql

#    bqdb:
#      action: dsunit:init
#      datastore: bqdb
#      config:
#        driverName: bigquery
#        credentials: $bqCredentials
#        parameters:
#          datasetId: bqdb
#      scripts:
#        - URL: datastore/bqdb/schema.sql

    oradb:
      action: dsunit:init
      datastore: ORADB
      recreate: true
      config:
        driverName: oci8
        descriptor: "[username]/[password]@${dbIP.ora}:1521/xe"
        credentials: $oraCredentials
        parameters:
          session:
            NLS_TIMESTAMP_FORMAT: YYYY-MM-DD HH24:MI:SS
            NLS_TIMESTAMP_TZ_FORMAT: YYYY-MM-DD HH24:MI:SS
            NLS_DATE_FORMAT: YYYY-MM-DD HH24:MI:SS
            TIME_ZONE: '00:00'
      admin:
        datastore: system
        ping: true
        config:
          driverName: oci8
          credentials: $oraAdminCredentials
          descriptor: "[username]/[password]@${dbIP.ora}:1521/xe"
      scripts:
        - URL: datastore/oradb/schema.sql

    aerodb:
      action: dsunit:init
      datastore: aerodb
      ping: true
      config:
        driverName: aerospike
        descriptor: tcp(${dbIP.aero}:3000)/[namespace]
        parameters:
          dbname: aerodb
          namespace: test
          host: ${dbIP.aero}
          port: 3000
          dateFormat: yyyy-MM-dd hh:mm:ss
          keyColumn: id
      recreate: true

    transfer:
      action: dsunit:init
      datastore: transfer
      recreate: true
      config:
        driverName: mysql
        descriptor: '[username]:[password]@tcp(${dbIP.mysql}:3306)/[dbname]?parseTime=true'
        credentials: $mysqlCredentials
      admin:
        datastore: mysql
        ping: true
        config:
          driverName: mysql
          descriptor: '[username]:[password]@tcp(${dbIP.mysql}:3306)/[dbname]?parseTime=true'
          credentials: $mysqlCredentials
