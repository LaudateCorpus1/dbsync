init:
  sourcePath: $Pwd(..)

pipeline:
  init:
    action: run
    request: '@data'
    comments: register driver, get datastore IPs
    sharedState: true

  test:
    tag: $pathMatch
    description: '@use_case'
    range: 1..041
    subPath: use_cases/${index}_*
    template:
      skip-tag:
        action: nop
        init:
          idx: $Int(${index})
          mysqlIP: 127.0.0.1
        skip: $HasResource(${subPath}/skip.txt)
        #comments: skip tag Id if subdirectory has skip.txt file present

      db1-prepare:
        when: '$HasResource(${path}/prepare/${db})'
        action: dsunit:prepare
        request: '@req/prepare'
        db: db1
      db2-prepare:
        when: '$HasResource(${path}/prepare/${db})'
        action: dsunit:prepare
        request: '@req/prepare'
        db: db2
      db3-prepare:
        when: '$HasResource(${path}/prepare/${db})'
        action: dsunit:prepare
        request: '@req/prepare'
        db: db3
      pgdb-prepare:
        when: '$HasResource(${path}/prepare/${db})'
        action: dsunit:prepare
        request: '@req/prepare'
        db: pgdb
      pbqb-prepare:
        when: '$HasResource(${path}/prepare/${db})'
        action: dsunit:prepare
        request: '@req/prepare'
        db: bqdb
      oraqb-prepare:
        when: '$HasResource(${path}/prepare/${db})'
        action: dsunit:prepare
        request: '@req/prepare'
        db: oradb
      aerodb-prepare:
        when: '$HasResource(${path}/prepare/${db})'
        action: dsunit:prepare
        request: '@req/prepare'
        db: aerodb


      postJob:
        when: $HasResource($path/request.json)
        action: rest/runner:send
        request: '@req/sync @request'
        comments: post a sync job


      scheduleJob:
        when: $HasResource($path/schedule.yaml)
        action: storage:copy
        expand: true
        sleepTimeMs: 5000
        source:
          URL: $path/schedule.yaml
        dest:
          URL: $sourcePath/sync/app/cron/

      jobStatus:
        when: $HasResource($path/status.json)
        action: rest/runner:send
        request: '@status'
        comments: get job sync status


      db1-expect:
        when: '$HasResource(${path}/expect/${db})'
        action: dsunit:expect
        request: '@req/expect'
        db: db1
      db2-expect:
        when: '$HasResource(${path}/expect/${db})'
        action: dsunit:expect
        request: '@req/expect'
        db: db2
      db3-expect:
        when: '$HasResource(${path}/expect/${db})'
        action: dsunit:expect
        request: '@req/expect'
        db: db3
      pgdb-expect:
        when: '$HasResource(${path}/expect/${db})'
        action: dsunit:expect
        request: '@req/expect'
        db: pgdb
      bqdb-expect:
        when: '$HasResource(${path}/expect/${db})'
        action: dsunit:expect
        request: '@req/expect'
        db: bqdb
      oradb-expect:
        when: '$HasResource(${path}/expect/${db})'
        action: dsunit:expect
        request: '@req/expect'
        db: oradb
      aerodb-expect:
        when: '$HasResource(${path}/expect/${db})'
        action: dsunit:expect
        request: '@req/expect'
        db: aerodb

